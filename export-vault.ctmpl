#!/bin/bash -e
{{scratch.Set "env" (env "APP_ENV") -}}
{{if scratch.Get "env" | contains "peer"}}{{and (scratch.Set "env" "stage") (scratch.Set "override" true)}}{{end -}}
{{if scratch.Get "env" | contains "dev"}}{{(scratch.Set "override" true)}}{{end -}}

## OLD DEPRECATED STYLE
#global secrets
{{range secrets (printf "secret/global/%s/env_vars" (scratch.Get "env")) -}}
{{/* check to see if app is peer related and skip ENV VARS that are already set */ -}}
{{if not (and (scratch.Get "override") (env .)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/%s/env_vars/%s" (scratch.Get "env") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

#app secrets
{{range secrets (printf "secret/apps/%s/%s/env_vars" (env "APP_NAME") (scratch.Get "env")) -}}
{{/* check to see if app is peer related and skip ENV VARS that are already set */ -}}
{{if not (and (scratch.Get "override") (env .)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/apps/%s/%s/env_vars/%s" (env "APP_NAME") (scratch.Get "env") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

## NEW STYLE
#global secrets
{{if not (scratch.Get "env" | contains "dev")}}
{{range secrets "secret/global/env_vars" -}}
{{/* check to see if app is peer related and skip ENV VARS that are already set */ -}}
{{if not (and (scratch.Get "override") (env .)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/env_vars/%s" .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}
{{end -}}

#products secrets
{{if (env "APP_PRODUCT") -}}
{{range secrets (printf "secret/products/%s/env_vars" (env "APP_PRODUCT")) -}}
{{/* check to see if app is peer related and skip ENV VARS that are already set */ -}}
{{if not (and (scratch.Get "override") (env .)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/products/%s/env_vars/%s" (env "APP_PRODUCT") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}
{{end -}}

#app secrets
{{range secrets (printf "secret/services/%s/env_vars" (env "APP_NAME")) -}}
{{/* check to see if app is peer related and skip ENV VARS that are already set */ -}}
{{if not (and (scratch.Get "override") (env .)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/services/%s/env_vars/%s" (env "APP_NAME") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}
