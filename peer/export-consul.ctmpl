#!/bin/bash -e

## OLD STYLE global envs
{{range ls "global/stage/env_vars" -}}
{{if not (env (.Key | toUpper)) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
{{end -}}

## NEW STYLE global envs
{{range ls "global/env_vars" -}}
{{if not (env (.Key | toUpper)) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
{{end -}}

#products envs
{{if (env "SERVICE_PRODUCT") -}}
{{range ls (printf "products/%s/env_vars" (env "SERVICE_PRODUCT")) -}}
{{if not (env (.Key | toUpper)) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
{{end -}}
{{end -}}

#OLD STYLE app envs
{{range ls (printf "apps/%s/stage/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (.Key | toUpper)) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
{{end -}}

#NEW STYLE app envs
{{range ls (printf "services/%s/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (.Key | toUpper)) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
{{end -}}

# Peer namespace, overwrites values to allow peer to inject values
{{range ls (printf "services/%s/peer/%s/env_vars" (env "SERVICE_NAME") (env "PEER_ID")) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}


