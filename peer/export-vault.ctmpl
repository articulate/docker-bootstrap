#!/bin/bash -e

## OLD DEPRECATED STYLE global secrets
{{range secrets "secret/global/stage/env_vars" -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/stage/env_vars/%s" .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

#NEW STYLE global secrets
{{range secrets "secret/global/env_vars" -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/env_vars/%s" .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

#products secrets
{{if (env "SERVICE_PRODUCT") -}}
{{range secrets (printf "secret/products/%s/env_vars" (env "SERVICE_PRODUCT")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/products/%s/env_vars/%s" (env "SERVICE_PRODUCT") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}
{{end -}}

#OLD DEPRECATED STYLE app secrets
{{range secrets (printf "secret/apps/%s/stage/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/apps/%s/stage/env_vars/%s" (env "SERVICE_NAME") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

#NEW STYLE app secrets
{{range secrets (printf "secret/services/%s/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/services/%s/env_vars/%s" (env "SERVICE_NAME") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

# Peer namespace, overwrites values to allow peer to inject values
{{range secrets (printf "secret/services/%s/peer/%s/env_vars" (env "SERVICE_NAME") (env "SERVICE_ENV")) -}}
export {{ . | toUpper}}{{with secret (printf "secret/services/%s/peer/%s/env_vars/%s" (env "SERVICE_NAME") (env "SERVICE_ENV") .) }}="{{.Data.value}}"{{end}}
{{end -}}
