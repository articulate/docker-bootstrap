#!/usr/bin/env bash
set -e

function log_deprecated(){
    path="${1}"
    env="${SERVICE_ENV}"
    product="${SERVICE_PRODUCT}"
    service="${SERVICE_NAME}"
    (>&2 echo "{\"level\":\"warn\",\"path\":\"${path}\",\"env\":\"${env}\",\"product\":\"${product}\",\"msg\":\"loaded deprecated value\"}")
}

# DEPRECATED: global secrets
{{range secrets "secret/global/stage/env_vars" -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/stage/env_vars/%s" .) }}="{{.Data.value}}"{{end}}
log_deprecated "secret/global/stage/env_vars/{{.}}"
{{end -}}
{{end -}}

# global secrets
{{range secrets "secret/global/env_vars" -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/env_vars/%s" .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}

# DEPRECATED: products secrets
{{if (env "SERVICE_PRODUCT") -}}
{{range secrets (printf "secret/products/%s/env_vars" (env "SERVICE_PRODUCT")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/products/%s/env_vars/%s" (env "SERVICE_PRODUCT") .) }}="{{.Data.value}}"{{end}}
log_deprecated "secret/products/${SERVICE_PRODUCT}/dev/env_vars/{{.}}"
{{end -}}
{{end -}}
{{end -}}

# DEPRECATED: app secrets
{{range secrets (printf "secret/apps/%s/stage/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/apps/%s/stage/env_vars/%s" (env "SERVICE_NAME") .) }}="{{.Data.value}}"{{end}}
log_deprecated "secret/apps/${SERVICE_NAME}/stage/env_vars/{{.}}"
{{end -}}
{{end -}}

# service secrets
{{range secrets (printf "secret/services/%s/env_vars" (env "SERVICE_NAME")) -}}
{{if not (env (. | toUpper)) -}}
export {{ . | toUpper}}{{with secret (printf "secret/services/%s/env_vars/%s" (env "SERVICE_NAME") .) }}="{{.Data.value}}"{{end}}
{{end -}}
{{end -}}
