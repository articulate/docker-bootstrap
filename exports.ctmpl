#!/bin/bash
{{$env := env "APP_ENV" -}}
{{$appname := env "APP_NAME" -}}

{{if $env | contains "peer"}}
{{$env := "stage"}}
# Set stage env for Peer
#global envs
{{range ls (printf "global/%s/env_vars" $env ) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
#app envs
{{range ls (printf "apps/%s/%s/env_vars" $appname $env ) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
#global secrets
{{range secrets (printf "secret/global/%s/env_vars" $env ) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/%s/env_vars/%s" $env .) }}{{range $k, $v := .Data}}="{{$v}}"{{end}}{{end}}
{{end -}}
#app secrets
{{range secrets (printf "secret/apps/%s/%s/env_vars" $appname $env) -}}
export {{ . | toUpper}}{{with secret (printf "secret/apps/%s/%s/env_vars/%s" $appname $env .) }}{{range $k, $v := .Data}}="{{$v}}"{{end}}{{end}}
{{end -}}
{{end -}}

#global envs
{{range ls (printf "global/%s/env_vars" $env ) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
#app envs
{{range ls (printf "apps/%s/%s/env_vars" $appname $env ) -}}
export {{.Key | toUpper}}="{{.Value}}"
{{end -}}
#global secrets
{{range secrets (printf "secret/global/%s/env_vars" $env ) -}}
export {{ . | toUpper}}{{with secret (printf "secret/global/%s/env_vars/%s" $env .) }}{{range $k, $v := .Data}}="{{$v}}"{{end}}{{end}}
{{end -}}
#app secrets
{{range secrets (printf "secret/apps/%s/%s/env_vars" $appname $env) -}}
export {{ . | toUpper}}{{with secret (printf "secret/apps/%s/%s/env_vars/%s" $appname $env .) }}{{range $k, $v := .Data}}="{{$v}}"{{end}}{{end}}
{{end -}}
